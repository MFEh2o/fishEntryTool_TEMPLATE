cur=chl[(chl$lakeID==lakeID & chl$depthClass==dc),]
plot(cur$dateSample,cur$chl,type='p')
curAgg=aggregate(cur$chl,list(cur$dateSample),FUN=mean)
points(as.Date(curAgg$Group.1),curAgg$x,pch=15)
lines(as.Date(curAgg$Group.1),curAgg$x)
cur[,c(5,11,12,15)]
lakeID="WL"
dc="Hypo"
cur=chl[(chl$lakeID==lakeID & chl$depthClass==dc),]
cur[grepl("2015",cur$dateSample),]
lakeID="EL"
dc="Hypo"
cur=chl[(chl$lakeID==lakeID & chl$depthClass==dc),]
cur[grepl("2013",cur$dateSample),]
675/18
library(sf)
library(mapview)
library(mapedit)
library(rayshader)
library(tidyverse)
library(elevatr)
library(raster)
library(whitebox)
library(stars)
library(rgl)
setwd("~/Documents/Research/MFE/database/fishEntryTool/")
list.files()
PEsum=read.csv("fishScapesPESUM_20190708.csv",header=TRUE,stringsAsFactors=FALSE)
dim(PEsum)
colnames(PEsum)
PEsum
list.files()
dbdir="~/Documents/Research/MFE/database/"
db="MFEdb.db"
source("~/Documents/Research/MFE/database/db/dbUtil.R")
PEsum=read.csv("fishScapesPESUM_20190708.csv",header=TRUE,stringsAsFactors=FALSE)
dbTableList()
fishSamp=dbTable("FISH_SAMPLES")
fishInfo=dbTable("FISH_INFO")
warnings()
fishSampIS=read.csv("fishInfoIS.csv",header=TRUE,stringsAsFactors=FALSE)
fishInfoIS=read.csv("fishInfoIS.csv",header=TRUE,stringsAsFactors=FALSE)
fishSampIS=read.csv("fishSamplesIS.csv",header=TRUE,stringsAsFactors=FALSE)
lakes=read.csv("proposedFishScapeLakeList_20180627.csv",header=TRUE,stringsAsFactors=FALSE)
driverLog=read.csv("driversLog2019.csv",header=TRUE,stringsAsFactors=FALSE)
colnames(fishSamp)
PEsum
# generate CPUE estimates
CPEsum=matrix(NA,nrow(PEsum),5)
i=1
head(fishSamp)
curSamp=fishSamp[grepl(PEsum$lakeID,fishSamp$siteID),]
curSamp=fishSamp[grepl(PEsum$lakeID[i],fishSamp$siteID),]
dim(curSamp)
PEsum$lakeID[i]
unique(curSamp$siteID)
unique(curSamp$gear)
sum(curSamp$gear=="BE")
curSamp=curSamp[curSamp$gear=="BE",]
dim(curSamp)
curSamp
PEsum[1,]
PEsum
driverLog
driverLog19=read.csv("driversLog2019.csv",header=TRUE,stringsAsFactors=FALSE)
dirverLog18=read.csv("~/Downloads/driversLog_condTemp.csv",header=TRUE,stringsAsFactors=FALSE)
driverLog18=read.csv("~/Downloads/driversLog_condTemp.csv",header=TRUE,stringsAsFactors=FALSE)
PEsum$cond=0
dim(lakes)
colnames(lakes)
PEsum
dbTableList()
lakesDB=dbTable("LAKES")
PEsum
sum(lakesDB$lakeID=="AR")
sum(lakesDB$lakeID=="BA")
sum(lakesDB$lakeID=="FD")
sum(lakesDB$lakeID=="JS")
sum(lakesDB$lakeID=="LC")
sum(lakesDB$lakeID=="LH")
sum(lakesDB$lakeID=="LR")
sum(lakesDB$lakeID=="TO")
sum(lakesDB$lakeID=="WC")
sum(lakesDB$lakeID=="WS")
sum(lakesDB$lakeID=="HT")
sum(lakesDB$lakeID=="BY")
sum(lakesDB$lakeID=="DY")
sum(lakesDB$lakeID=="SV")
sum(lakesDB$lakeID=="UG")
curlakesDB=lakesDB[lakesDB$lakeID%in%PEsum$lakeID,]
dim(curlakesDB)
dim(PEsum)
curlakesDB
sum(PEsum$lakeID==curlakesDB$lakeID)
PEsum=PEsum[order(PEsum$lakeID),]
curlakesDB=curlakesDB[order(curlakesDB$lakeID),]
PEsum=PEsum[order(PEsum$lakeID),]
sum(curlakesDB$lakeID==PEsum$lakeID)
PEsum$lakeArea=curlakesDB$surfaceArea
PEsum$zmax=curlakesDB$maxDepth
dim(driverLog19)
dim(driverLog18)
colnames(driverLog18)
conduct18=tapply(driverLog18$SpC,driverLog18$lakeID,mean,na.rm=TRUE)
conduct18
conduct19=tapply(driverLog19$conductivity,driverLog19$lakeID,mean,na.rm=TRUE)
conduct19
conduct=c(conduct18,conduct19)
conduct=conduct[names(conduct)%in%PEsum$lakeID]
length(conduct)
conduct
PEsum=read.csv("fishScapesPESUM_20190708.csv",header=TRUE,stringsAsFactors=FALSE)
PEsum
PEsum=PEsum[-2,]
fishSamp=dbTable("FISH_SAMPLES")
fishInfo=dbTable("FISH_INFO")
fishSampIS=read.csv("fishSamplesIS.csv",header=TRUE,stringsAsFactors=FALSE)
fishInfoIS=read.csv("fishInfoIS.csv",header=TRUE,stringsAsFactors=FALSE)
lakes=read.csv("proposedFishScapeLakeList_20180627.csv",header=TRUE,stringsAsFactors=FALSE)
driverLog19=read.csv("driversLog2019.csv",header=TRUE,stringsAsFactors=FALSE)
driverLog18=read.csv("~/Downloads/driversLog_condTemp.csv",header=TRUE,stringsAsFactors=FALSE)
lakesDB=dbTable("LAKES")
curlakesDB=lakesDB[lakesDB$lakeID%in%PEsum$lakeID,]
curlakesDB=curlakesDB[order(curlakesDB$lakeID),]
PEsum=PEsum[order(PEsum$lakeID),]
sum(curlakesDB$lakeID==PEsum$lakeID)
PEsum$lakeArea=curlakesDB$surfaceArea
PEsum$zmax=curlakesDB$maxDepth
# add conductivity
PEsum$cond=0
conduct18=tapply(driverLog18$SpC,driverLog18$lakeID,mean,na.rm=TRUE)
conduct19=tapply(driverLog19$conductivity,driverLog19$lakeID,mean,na.rm=TRUE)
conduct=c(conduct18,conduct19)
conduct=conduct[names(conduct)%in%PEsum$lakeID]
length(conduct)
dim(PEsum)
conduct=conduct[order(names(conduct))]
sum(names(conduct)==PEsum$lakeID)
PEsum$cond=conduct
PEsum
# add biggest fish caught electrofishing
PEsum$biggestFish=0
i=1
curSamp=fishSamp[grepl(PEsum$lakeID[i],fishSamp$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
dim(curSamp)
curSamp
curFI=fishInfo[fishInfo$sampleID%in%curSamp$sampleID,]
dim(curFI)
colnames(curFI)
unique(curFI$projectID)
unique(curFI$sampleID)
max(as.numeric(curFI$fishLength))
max(as.numeric(curFI$fishLength),na.rm=TRUE)
curSamp=fishSampIS[grepl$PEsum$lakeID[i],fishSampIS$siteID),]
curSamp=fishSampIS[grepl(PEsum$lakeID[i],fishSampIS$siteID),]
dim(curSamp)
PEsum
i=2
curSamp=fishSampIS[grepl(PEsum$lakeID[i],fishSampIS$siteID),]
dim(curSamp)
curSamp=curSamp[curSamp$gear=="BE",]
dim(curSamp)
curFI=fishInfoIS[fishInfoIS$sampleID%in%curSamp$sampleID,]
# add biggest fish caught electrofishing
PEsum$biggestFish=0
for(i in 1:nrow(PEsum)){
if(PEsum$samYear==2018){
curSamp=fishSamp[grepl(PEsum$lakeID[i],fishSamp$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
curFI=fishInfo[fishInfo$sampleID%in%curSamp$sampleID,]
PEsum$biggestFish[i]=max(as.numeric(curFI$fishLength),na.rm=TRUE)
}else{
curSamp=fishSampIS[grepl(PEsum$lakeID[i],fishSampIS$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
curFI=fishInfoIS[fishInfoIS$sampleID%in%curSamp$sampleID,]
PEsum$biggestFish[i]=max(as.numeric(curFI$fishLength),na.rm=TRUE)
}
}
warnings()
PEsum$biggestFish=0
for(i in 1:nrow(PEsum)){
if(PEsum$samYear[i]==2018){
curSamp=fishSamp[grepl(PEsum$lakeID[i],fishSamp$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
curFI=fishInfo[fishInfo$sampleID%in%curSamp$sampleID,]
PEsum$biggestFish[i]=max(as.numeric(curFI$fishLength),na.rm=TRUE)
}else{
curSamp=fishSampIS[grepl(PEsum$lakeID[i],fishSampIS$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
curFI=fishInfoIS[fishInfoIS$sampleID%in%curSamp$sampleID,]
PEsum$biggestFish[i]=max(as.numeric(curFI$fishLength),na.rm=TRUE)
}
}
PEsum
unique(curFI$species)
PEsum$biggestFish=0
for(i in 1:nrow(PEsum)){
if(PEsum$samYear[i]==2018){
curSamp=fishSamp[grepl(PEsum$lakeID[i],fishSamp$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
curFI=fishInfo[fishInfo$sampleID%in%curSamp$sampleID,]
curFI=curFI[curFI$species=="largemouth_bass",]
PEsum$biggestFish[i]=max(as.numeric(curFI$fishLength),na.rm=TRUE)
}else{
curSamp=fishSampIS[grepl(PEsum$lakeID[i],fishSampIS$siteID),]
curSamp=curSamp[curSamp$gear=="BE",]
curFI=fishInfoIS[fishInfoIS$sampleID%in%curSamp$sampleID,]
curFI=curFI[curFI$species=="largemouth_bass",]
PEsum$biggestFish[i]=max(as.numeric(curFI$fishLength),na.rm=TRUE)
}
}
PEsum
colnames(lakes)
unique(lakes$lakeType)
range(lakes$waterClarity)
unique(lakes$waterClarity)
dim(lakes)
PEsum
PEsum$WBIC=curlakesDB$WBIC
sum(PEsum$WBIC%in%lakes$WBIC)
lakes[lakes$WBIC%IN%PEsum$WBIC,]
lakes[lakes$WBIC%in%PEsum$WBIC,]
colnames(PEsum)
#trying some stuff to predict PE
# predicting PE
plot(PEsum$CPEmi_shock,PEsum$nHat)
plot(PEsum$CPEmi_shock,PEsum$nHat,log="y")
summary(lm(PEsum$nHat~PEsum$CPEmi_shock))
summary(lm(PEsum$nHat~PEsum$CPEmi_shock*PEsum$cond))
summary(lm(PEsum$nHat~PEsum$CPEmi_shock+PEsum$cond))
summary(lm(nHat~CPEmi_shock,data=PEsum))
colnames(PEsum)
summary(lm(nHat~CPEmi_shock+lakeArea,data=PEsum))
summary(lm(nHat~CPEmi_shock*lakeArea,data=PEsum))
summary(lm(nHat~CPEmi_shock+lakeArea+cond,data=PEsum))
summary(lm(nHat~CPEmi_shock*lakeArea*cond,data=PEsum))
colnames(PEsum)
summary(lm(nHat~CPEmi_shock+zmax+cond,data=PEsum))
summary(lm(nHat~CPEmi_shock*zmax*cond,data=PEsum))
colnames(PEsum)
summary(lm(nHat~CPEmi_shock+biggestFish,data=PEsum))
summary(lm(nHat~CPEmi_shock*biggestFish,data=PEsum))
summary(lm(nHat~biggestFish,data=PEsum))
plot(PEsum$biggestFish,PEsum$nHat)
# predicting PE per km
plot(PEsum$CPEmi_shock,PEsum$fishPerKmShoreline)
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+zmax+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*zmax*cond,data=PEsum))
plot(PEsum$biggestFish,PEsum$fishPerKmShoreline)
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
dim(PEsum)
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish+cond+CPEmi_shock:cond+CPEmi_shock:biggestFish))
summary(lm(fishPerKmShoreline~biggestFish+cond+CPEmi_shock:cond+CPEmi_shock:biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish+cond+CPEmi_shock:cond+CPEmi_shock:biggestFish+CPEmi_shock,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish+cond+CPEmi_shock:cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish+cond+CPEmi_shock:cond+CPEmi_shock:biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock:cond+CPEmi_shock:biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock:cond+CPEmi_shock:biggestFish+CPEmi_shock,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond+CPEmi_shockcond+biggestFish:cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond+CPEmi_shock:cond+biggestFish:cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum))
summary(lm(fishPerKmSHoreline~biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+zmax+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*zmax*cond,data=PEsum))
summary*(lm(fishPerKmShoreline~cond,data=PEsum))
summary(lm(fishPerKmShoreline~cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum))
summary(lm(nHat~biggestFish,data=PEsum))
summary(lm(nHat~CPEmi_shock+biggestFish,data=PEsum))
summary(lm(nHat~CPEmi_shock*biggestFish,data=PEsum))
#### weighted regression attempt
ciRange=PEsum$nHatHigh-PEsum$nHatLow
ciRange
PEsum
PEsum$nHatHigh[!is.finite(PEsum$nHatHigh)]=1e5
#### weighted regression attempt
# filling in 100000 for lakes with negative or Inf as upper limit
PEsum$nHatHigh[PEsum$nHatHigh<0]=1e5
PEsum
ciRange=PEsum$nHatHigh-PEsum$nHatLow
summary(lm(fishPerKmShoreline~CPEmi_shock,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock,weight=ciRange,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,weight=ciRange,data=PEsum))
summary(lm(fishPerKmShoreline~cond,weight=ciRange,data=PEsum))
summary(lm(fishPerKmShoreline~cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea+cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea*cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+zmax+cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*zmax*cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~cond,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=ciRange))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=ciRange))
?lm
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea*cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+zmax+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*zmax*cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum,weight=1/ciRange))
1.96*2
#### scale ciRange to sd assuming this is a symmetric 95% CI
ciSD=ciRange/3.92
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+zmax+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*zmax*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum,weight=1/ciSD))
# convert ciSD to ciVar since that is what they are treated as in lm...
ciVar=ciSD^2
# convert ciSD to ciVar since that is what they are treated as in lm...
ciVar=ciSD^2
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+lakeArea+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*lakeArea*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+zmax+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*zmax*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=1/ciRange))  #*********
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciRange)) #*********
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=1/ciRange))  #*********
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciRange)) #*********
summary(lm(fishPerKmShoreline~cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum,weight=1/ciRange))
summary(lm(fishPerKmShoreline~CPEmi_shock,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum,weight=1/ciSD))
summary(lm(fishPerKmShoreline~CPEmi_shock+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish*cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~biggestFish*cond+CPEmi_shock,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock+biggestFish+cond,data=PEsum,weight=1/ciVar))
summary(lm(fishPerKmShoreline~CPEmi_shock*biggestFish*cond,data=PEsum,weight=1/ciVar))
plot(PEsum$CPEmi_shock,PEsum$fishPerKmShoreline)
PEsum
PEsum[order(PEsum$samYear),]
# Load packages -----------------------------------------------------------
library(tidyverse)
library(here)
library(checkmate)
# Load tables from database
lakesDB <- dbTable("LAKES")
fishSamplesDB <- dbTable("FISH_SAMPLES")
fishInfoDB <- dbTable("FISH_INFO")
Sys.setenv(tz = "America/Chicago")
# Load packages -----------------------------------------------------------
library(tidyverse)
library(here)
library(checkmate)
Sys.setenv(tz = "America/Chicago")
dbdir <- here()
db <- "MFEdb_20210423.db"
funcdir <- here("code")
source(file.path(funcdir, "dbUtil.R")) # load the dbUtil functions
# Load tables from database
lakesDB <- dbTable("LAKES")
here()
source(file.path(funcdir, "dbUtil.R")) # load the dbUtil functions
dbTable("lakes")
db <- "MFEdb_20210423.db"
# Load tables from database
lakesDB <- dbTable("LAKES")
dbdir <- here()
db <- "MFEdb_20210423.db"
funcdir <- here("code")
source(file.path(funcdir, "dbUtil.R")) # load the dbUtil functions
# Load tables from database
lakesDB <- dbTable("LAKES")
fishSamplesDB <- dbTable("FISH_SAMPLES")
fishInfoDB <- dbTable("FISH_INFO")
otu <- dbTable("OTU")
lakesDB <- suppressWarnings(dbTable("lakes"))
fishSamplesDB <- suppressWarnings(dbTable("fish_samples"))
fishInfoDB <- suppressWarnings(dbTable("fish_info"))
otu <- suppressWarnings(dbTable("otu"))
fishNames <- otu %>% filter(!is.na(abbreviation))
otu
names(otu)
fishNames <- otu %>% filter(!is.na(abbreviation))
head(fishNames)
fishNames
isdir <- here("inSeason")
"fishInfoIS.csv" %in% list.files(isdir)
fishInfoIS <- read.csv("fishInfoIS.csv", header = T, stringsAsFactors = F)
fishInfoIS <- read.csv(here(isdir, "fishInfoIS.csv"),
header = T, stringsAsFactors = F)
fishInfoIS
fishInfoIS <- fishInfoDB[FALSE,]
fishInfoIS
if("fishSamplesIS.csv" %in% list.files(isdir)){
fishSamplesIS <- read.csv(here(isdir, "fishSamplesIS.csv"),
header = T, stringsAsFactors = F)
}else{
fishSamplesIS <- fishSamplesDB[FALSE,]
}
# Check which files have been compiled and which have not in the directory
beenCompiled <- unique(fishInfoIS$entryFile)
fishInfoIS
fishInfoIS <- fishInfoDB[FALSE,]
# Check which files have been compiled and which have not in the directory
beenCompiled <- unique(fishInfoIS$entryFile)
beenCompiles
beenCompiled
?list.files
toCompile <- list.files(path = here("sampleSheets"),
pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{4}\\.csv")
toCompile <- toCompile[!toCompile %in% beenCompiled]
toCompile
